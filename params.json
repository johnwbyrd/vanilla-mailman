{"name":"Vanilla-mailman","tagline":"Bi-directional gateway between Vanilla web forum and mailman listserver","body":"<link href=\"http://kevinburke.bitbucket.org/markdowncss/markdown.css\" rel=\"stylesheet\"></link>\r\n# vanilla-mailman \r\n\r\n---\r\n\r\n## Caveat emptor\r\n\r\n*If you don't understand anything else in this document, read this:* This \r\nsoftware can only be installed and made operational by an engineer who\r\nunderstands perl, PHP, MySQL and editing configuration files by hand.\r\nThis is not a piece of software that you can slam in and let 'er rip.\r\nThere are simply too many moving parts.  Patience and some testing\r\ntime will be necessary to make sure that all these parts interrelate\r\nand work correctly with one another.  Moreover, I just don't have a ton\r\nof time to support this software.\r\n\r\nComments and advice on how this software may be improved are very \r\nwelcome; I encourage github pull requests and other patches to improve \r\nstability and compatibility. \r\n\r\n# About this software\r\n\r\nThis is a set of scripts and logic for integrating the \r\nopen-source version of [Vanilla Forum](http://www.vanillaforums.org) \r\nwith the GNU version of [Mailman version \r\n2.1](http://www.gnu.org/software/mailman/).  It allows _bi-directional\r\ndiscussions_ between e-mail and an online discussion forum.  Users may\r\ntalk with each other transparently via either the Vanilla web interface \r\nor via a mailman listserver.\r\n\r\n# Features \r\n\r\n- Full bi-directional support for discussions and comments emanating \r\nfrom users participating via the Vanilla web forum interface or via \r\nMailman's web email interface. Users may converse with one another via \r\ne-mail list or the Web interface, and the discussion is seamless to all \r\nparties. \r\n- Smart message reformatting. Messages from Vanilla are reformatted \r\nintelligently into text and HTML format emails. Message quoting and \r\nreformatting is automatically detected and converted into HTML when \r\nemail is sent from Mailman into Vanilla. \r\n- Smart thread recovery and reconstruction. The software is able to \r\nfigure out threading via e-mail discussions and appropriately \r\nreconstruct threads within Vanilla's comments structure, using the JWZ \r\nalgorithm. \r\n- Integrated password management. Users may change Mailman list \r\nproperties entirely from within Vanilla, including setting no-mail, \r\ndigest, HTML versus plain text emails, and receive own mailing flags. \r\nAdditionally, changing the password for a user within Vanilla updates \r\nthe corresponding password within Mailman. \r\n- Free (and worth every penny).\r\n\r\n# Installation requirements \r\n\r\nIntegrating a web-based discussion forum with an email list is a \r\nnon-trivial task with many corner cases. Therefore this software has \r\nsome strong opinions on how this integration should be accomplished. \r\n\r\nFirst, the versions of Mailman as well as Vanilla are highly specific. \r\nMailman must be of the 2.1+ variety, with the modifications described \r\nherein; the new 3.0 branch is currently guaranteed not to work with this \r\nimplementation, because this implementation accesses MySQL databases in \r\nwhich both Mailman and Vanilla store their details directly. \r\n\r\nThis system was designed to run on a single CentOS 6.4 installation with \r\ncommand-line and root access. Later versions of CentOS 6.x might work, \r\nbut the installation steps may vary from the steps described in \r\nthis document. In this installation, the Vanilla Forum, as well as the \r\nmailman server, are intended to run on the same physical machine; \r\nhowever there is no techical reason why this must be the case, as long \r\nas the shared MySQL database is accessible to both the server running \r\nVanilla as well as the server running Mailman. However, a dual-server \r\ninstallation has not been tested. \r\n\r\n# Installation\r\n\r\nThere are several major steps that must be completed in the following\r\norder to get this software to work correctly.\r\n\r\n- Install CentOS prerequisites\r\n\t- gcc\r\n\t- wget\r\n\t- mysql-devel\r\n\t- httpd\r\n\t- OPTIONAL: epel\r\n\t- OPTIONAL: phpMyAdmin\r\n\t- perl\r\n\t- CPAN\r\n\t- cpanm\r\n- Uninstall sendmail\r\n- Install and test postfix\r\n- Download and compile mailman\r\n- Install mailman\r\n- Test mailman\r\n- OPTIONAL: Set up SPF\r\n- OPTIONAL: Set up DKIM\r\n- Install vanilla forum\r\n- Install necessary vanilla plugins \r\n\t- Force Guest Sign-In\r\n\t- Useful Functions\r\n\t- Mailman\r\n- Install Emails-Parser \r\n- Set up gateway user (vanillagate)\r\n\t- Install cron jobs for vanillagate\r\n- OPTIONAL: install xdebug\r\n\r\n# Install CentOS prerequisites\r\n\r\nThis installation was conducted on CentOS 6.4 Final, with:\r\n\r\n\t# yum upgrade\r\n\t\r\nrun on it as of August 23 2013.\r\n\r\nFirst, install EPEL.  Generic instructions on how to set up EPEL are [here.](http://fedoraproject.org/wiki/EPEL/FAQ#How_can_I_install_the_packages_from_the_EPEL_software_repository.3F)\r\n\r\nAt this point, install several prerequisites at once:\r\n\t\r\n\t# yum install gcc make httpd mysql-devel perl-CPAN php-mysql php53-string php-cli mysql-server python-devel MySQL-python\r\n\t\r\nand accept all prerequisites to be installed.\r\n\r\nAt this point you need to set (if you haven't already) a MySQL root \r\npassword. Generic instructions on how to do this are \r\n[here.](http://dev.mysql.com/doc/refman/5.0/en/resetting-permissions.html) \r\nHowever, I found it easiest to do this by running the script that was \r\nautomatically installed at: \r\n\r\n\t# /usr/bin/mysql_secure_installation\r\n\t\r\nThis script allows you to set a root password for MySQL.\r\n\r\nMySQL seems to want to open a port 3306 when it is installed; this is \r\nlikely not what you want. To disable this, add this to the end of \r\n/etc/my.cnf: \r\n\r\n\t# Stop permitting access from any IP address\r\n\t[mysqld]\r\n\tbind-address=127.0.0.1\r\n\r\nMake sure the services start at boot time as well:\r\n\r\n\t# chkconfig mysqld on\r\n\t# chkconfig httpd on\r\n\r\n## Install EPEL and phpMyAdmin\r\n\r\nThis step is recommended but not strictly necessary. If you don't do this though you'll \r\nneed to have another preferred method for viewing and administrating the \r\nMySQL database you just installed. Generic instructions on how to set up \r\nEPEL are [here.](http://fedoraproject.org/wiki/EPEL/FAQ#How_can_I_install_the_packages_from_the_EPEL_software_repository.3F)\r\n\r\nOnce you've done this, you can type\r\n\r\n\t# yum install phpMyAdmin\r\n\t\r\nto install phpMyAdmin.\r\n\r\nThe default installation of phpMyAdmin via EPEL is extremely \r\nrestrictive. You may wish to edit /etc/httpd/conf.d/phpMyAdmin.conf so \r\nthat your IP address is permitted to access it remotely: \r\n\r\n\t<IfModule !mod_authz_core.c>\r\n\t\t# Apache 2.2\r\n\t\tOrder Deny,Allow\r\n\t\tDeny from All\r\n\t\tAllow from 127.0.0.1\r\n\t\tAllow from your.ip.address.here\r\n\t\tAllow from ::1\r\n\t</IfModule>\r\n   \r\nFurthermore, the default httpd.conf file limits the ability of the .htaccess file\r\nwhich was part of Vanilla to do prettier URLs.  To fix this and restore\r\npretty URLs, look in the section of /etc/httpd/conf/httpd.conf that starts with\r\n<Directory \"/var/www/html\"> and modify the AllowOverride directive from None\r\nto All:\r\n\r\n\tAllowOverride All\r\n\r\nOnce you've edited that file, restart httpd:\r\n\r\n\tservice httpd restart\r\n\t\r\n### Optional: install mutt\r\n\r\nThis software reads and parses e-mail using the Maildir directory \r\nformat. One mail client that reads and writes this format, and hence is \r\nuseful for debugging, is the mutt mail reader. \r\n\r\n\t# yum install mutt\r\n\t\r\nAfter installing mutt, you can read and view email for any particular \r\nuser more easily by setting up either a user-specific .muttrc file or a \r\nsystem-wide /etc/Muttrc file with contents something like the following: \r\n\r\n\tset mbox_type = Maildir\r\n\tset spoolfile = \"~/Maildir\"\r\n\tset folder = '~/Maildir' # default: '~/Mail'\r\n\tset from = 'this.user@yourmailserver.com' # default: ''\r\n\tset visual = 'nano' # default: ''\r\n\t\r\n## Remove sendmail and install postfix\r\n\r\n\t# yum erase sendmail\r\n\t# yum install postfix\r\n\t\r\nAt this point, you'll need to edit the default postfix settings in \r\n/etc/postfix/main.cf . Sanity check all the settings in this file, but \r\nin particular to get this working with Mailman you'll also need to set \r\nthe *myhostname* setting in main.cf to be the publicly available \r\nhostname of your server: \r\n\r\n\tmyhostname = your.hostname.com\r\n\t\r\nAlso, the people who wrote this distribution thought it was a good idea \r\nthat it should not actually send and receive mail from the Internet, so \r\nyou have to change this default: \r\n\r\n\tinet_interfaces = all\r\n\t\r\nUncomment the recipient_delimiter line, which Mailman uses to handle bounces:\r\n\r\n\trecipient_delimiter = +\r\n\t\r\nThis system uses Maildir style mailboxes to hold traffic to and from the \r\nforum, so uncomment the Maildir home_mailbox option: \r\n\r\n\thome_mailbox = Maildir/\r\n\t\r\n# Install mailman\r\n\r\n*IMPORTANT!* Do *NOT* use yum to install mailman. It's necessary to \r\nchange a lot of the default settings from the way that the CentOS \r\ndistribution does this by default. So download the latest Mailman 2.1 \r\nsources from the GNU distribution: \r\n\r\n\t# cd ~\r\n\t# wget http://ftp.gnu.org/gnu/mailman/mailman-2.1.16rc2.tgz\r\n\t# tar xfvz mailman-2.1.16rc2.tgz\r\n\t# cd mailman-2.1.16rc2\r\n\t# useradd -c \"Mailman\" -s /sbin/nologin -U mailman\r\n\t# chmod a+rx,g+ws /var/lib/mailman\r\n\t# ./configure --with-cgi-gid=apache --with-mail-gid=mailman --with-var-prefix=/var/lib/mailman --with-mailhost=your.mailhost.com --with-urlhost=your.mailmanurl.com\r\n\t# make\r\n\t# make install\r\n\t\r\nEnable an administrative mailing list:\r\n\r\n\t# cd /usr/local/mailman/bin\r\n\t# ./newlist mailman\r\n\t# ./config_list -i /usr/local/mailman/data/sitelist.cfg\r\n\t\r\n## Teach httpd to display mailman scripts\r\n\t\r\nTeach httpd that it should use the Mailman scripts to display web pages. \r\nCopy the mailman.conf file from the Mailman-2.1 changes directory to the \r\n/etc/httpd/conf.d directory, or use it as a guide to set up your own \r\nmailman.conf file on the server. \r\n\r\n## Set up mm_cfg.py\r\n\r\nCopy mm_cfg.py from the mailman-2.1 changes directory to \r\n/usr/local/mailman/Mailman on the remote server. This file will need to \r\nbe edited to set the fully qualified domain name of the server and email \r\nhosts: \r\n\r\n\tfqdn = 'your.mailman.com'\r\n\tDEFAULT_URL_HOST   = 'your.mailman.com'\r\n\tDEFAULT_EMAIL_HOST = 'your.mailman.com'\r\n\r\n\t# Because we've overriden the virtual hosts above add_virtualhost\r\n\t# MUST be called after they have been defined.\r\n\r\n\tadd_virtualhost(DEFAULT_URL_HOST, DEFAULT_EMAIL_HOST)\r\n\r\n## Set up aliases for postfix\r\n\r\nIn /etc/postfix/main.cf, tweak the alias_maps line:\r\n\r\n\talias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\r\n\t\r\n## Copy magic files into Mailman install\r\n\r\nFor each mailing list that you create, you'll need to copy the extend.py \r\nfile from the Mailman-2.1 changes folder in the distribution into each \r\nsubdirectory that exists within /var/lib/mailman/lists/ that you want to \r\nshare with the online web forum. This extend.py file tells Mailman to \r\nuse the MySQL adapter to list the users that will be present in that \r\nparticular mailing list. \r\n\r\nAdditionally, copy the MySqlMemberships.py file from the Mailman-2.1 \r\nchanges folder into the /usr/local/mailman/Mailman directory. This is \r\nthe MySQL adapter file that causes Mailman to read from the MySQL \r\ndatabase instead of a Python pickle for getting the user list. \r\n\r\nOnce you've done these things you'll need to restart Mailman to use these\r\nnew files:\r\n\r\n\t# /usr/local/bin/mailman/bin/mailmanctl restart\r\n\t\r\nAt this point, if you have correctly set everything up, there should be \r\na new table in the database called GDN_mailman_mysql which contains names\r\nfor each of the mailman users.\r\n\r\nNote: on my installation I had to enable all permissions globally for\r\n/root/.python-eggs in order to proceed.  Another way of getting the same \r\nresult would be to edit extend.py with the following information:\r\n\r\n\timport os\r\n\tos.environ['PYTHON_EGG_CACHE']='/path/to/egg/cache'\r\n\r\n## Finish mailman installation\r\n\r\nAt this point, you'll have to do the remaining manual steps for \r\ninstalling Mailman, including [installing the \r\ncrontab](http://www.gnu.org/software/mailman/mailman-install/node41.html) as well as [installing and starting the default \r\nservice.](http://www.gnu.org/software/mailman/mailman-install/node42.html) Also, you'll need to [create site and list \r\npasswords.](http://www.gnu.org/software/mailman/mailman-install/node44.html) \r\n\r\nMake sure that you can log in and administrate your mailing list via the \r\nMailman web interface at the http://your.site.com/mailman address. Also, \r\nnow would be a good time to verify that mail coming into and out of your \r\nmailing list works normally as well. \r\n\r\n## Install your own mailing list(s)\r\n\r\nAt this point, you'll need to teach Mailman about any mailing lists that \r\nyou want Mailman to manage. Create your mailing lists in the usual \r\nfashion using the Mailman web interface.  See <http://www.gnu.org/software/mailman/mailman-install/node45.html> \r\nfor more details.  Also verify that your mailing lists operate nominally\r\nas mailing lists before proceeding.\r\n\r\n# Set up anti-spam protection for your list\r\n\r\nWhile it is not strictly necessary to set up anti-spam features for your mailing list,\r\nthe vast majority of modern mail services will immediately mark your mail as spam\r\nunless you install some modern services on your postfix mail server.  These include\r\nat least SPF, DKIM and possibly DMARC.\r\n\r\n## Set up SPF\r\n\r\nWhile setting up an SPF record for your domain is beyond the scope of this document,\r\nsome general advice is in order.  If you are running your own mail server, as this \r\ndocument assumes, then you will need to add a TXT record with the (short) host name\r\nof your mail server, and a TXT record with a value like\r\n\r\n\tv=spf1 mx -all\r\n\t\r\nFor more information on how to design an SPF record, see <http://www.openspf.org/Tools>\r\nand/or <http://www.microsoft.com/mscorp/safety/content/technologies/senderid/wizard/>\r\nand/or <http://www.kitterman.com/spf/validate.html>.\r\n\r\n## Set up DKIM\r\n\r\nAs root, install the OpenDKIM package:\r\n\t\r\n\t# yum install opendkim\r\n\t\r\nRestart the opendkim daemon:\r\n\r\n\t# service opendkim restart\r\n\t\r\nThis in turn will automatically generate 1024-bit keys for you:\r\n\r\n\tStopping OpenDKIM Milter:                                  [FAILED]\r\n\tGenerating default DKIM keys:                              [  OK  ]\r\n\tDefault DKIM keys for yourserver.com created in /etc/opendkim/keys.\r\n\tStarting OpenDKIM Milter:                                  [  OK  ]\r\n\t\r\nNow edit /etc/opendkim.conf.  Set the operating mode to s (signer):\r\n\r\n\tMode  s\r\n\t\r\nAnd set the domain you're signing for, i.e. the domain of the mail server:\r\n\r\n\tDomain  your.mailserver.com\r\n\t\r\nAdd the following line (if necessary) to permit signing from any subdomains\r\nwithin your domain:\r\n\r\n\tSubdomains yes\r\n\t\r\nUncomment the InternalHosts file location:\r\n\r\n\tInternalHosts   refile:/etc/opendkim/TrustedHosts\r\n\t\r\nNext, edit /etc/postfix/main.cf and add the following information, which queries\r\nthe local OpenDKIM server from within postfix:\r\n\r\n\tsmtpd_milters = inet:127.0.0.1:8891\r\n\tnon_smtpd_milters = $smtpd_milters\r\n\tmilter_default_action = accept\r\n\tmilter_protocol = 2\r\n\t\r\nRestart opendkim and then restart postfix:\r\n\r\n\t# service restart opendkim\r\n\t# service restart postfix\r\n\t\r\n## Create a DMARC record for your domain\r\n\r\nThe best tool I've found for designing a DMARC record for your domain is\r\nat <http://www.unlocktheinbox.com/dmarcwizard/>.  Again you'll need\r\nto modify your TXT records for your domain in question.\r\n\r\n## Set up reverse DNS for your mail server\r\n\r\nMany modern e-mail services will reject your e-mail just for not having\r\nreverse DNS set up appropriately.  Make sure that reverse DNS is working\r\ncorrectly for your domain.\r\n\r\nOnce you have done all this, e-mail sent from your postfix mail server\r\nto a mail testing service, such as that at <http://www.mail-tester.com/>,\r\nshould indicate that your e-mail is spam-free.\r\n\r\n# Install Vanilla forum\r\n\r\nInstall the 2.2.3.5 version of Vanilla into the /var/www/html directory \r\non the server. Later or other versions may or may not work with the \r\nVanilla plugin for Mailman. You'll need to set up a Vanilla-specific \r\nuser on MySQL in order to do this; I found phpMyAdmin very helpful, but \r\nit's also possible via the command line as well. \r\n\r\n## Optional: install xdebug\r\n\r\nThis step may be skipped if everything works the way you expect, but if \r\nfor some reason the Mailman plugin misbehaves, installing xdebug on the \r\nweb server can be used to help debug the plugin. If you've installed \r\nEPEL, you can at this point install xdebug in a straightforward manner: \r\n\t\r\n\tyum install php-pecl-xdebug\r\n\t\r\nNow xdebug.so lives in /usr/lib64/php/modules/xdebug.so .\r\n\r\nAt this point you will need to tweak xdebug for your installation, via editing /etc/php.d/xdebug.ini:\r\n\r\n\t; Enable xdebug extension module\r\n\tzend_extension=/usr/lib64/php/modules/xdebug.so\r\n\txdebug.remote_enable=On\r\n\t; xdebug.remote_autostart=On\r\n\txdebug.remote_handler=dbgp\r\n\t; developer workstation IP address\r\n\txdebug.remote_host=1.2.3.4\r\n\txdebug.remote_port=9000\r\n\txdebug.remote_mode=req\r\n\t\r\nThen restart the web server:\r\n\r\n\t# service httpd restart\r\n\t\r\nDebugging a PHP installation is beyond the scope of this document, but I used Eclipse\r\nand SFTP to develop and debug the Vanilla plugin.  \r\n\r\n## Install necessary Vanilla plugins\r\n\r\nThe following plugins must be installed into Vanilla for this system to work:\r\n\r\n\tLogger\r\n\tUsefulFunctions\r\n\t\r\nTo install these plugins, download them from \r\nhttp://www.vanillaforums.org and copy the directories into the \r\n/var/www/html/plugins directory on the server. Case is important -- make \r\nsure the directories are capitalized. Additionally, copy the Mailman \r\nfolder onto the server, also into /var/www/html/plugins . \r\n\r\nThe following plugin may optionally be installed:\r\n\r\n\tForceGuestSignIn\r\n\r\nNote that there is as of this writing a bug in the ForceGuestSignIn \r\nplugin that causes the plugin not to work correctly. In default.php, \r\nfind the line labelled \r\n\r\n\theader('location:/entry')\r\n\t\r\nand replace it with \r\n\r\n\tRedirect('entry');\r\n\r\nand your plugin would work with configurations that are installed not in \r\nthe root. \r\n\r\n## Install the Mailman plugin\r\n\r\nCopy the Mailman directory provided in this system to the Vanilla \r\nplugins directory at /var/www/html/plugins . Then log on to Vanilla as \r\nthe Vanilla administrator and go to the Vanilla dashboard. Under the \r\nAddons tab, select Plugins. You should see an entry for the Mailman \r\nplugin. Enable this plugin. Then, click the Settings button for the \r\nMailman plugin. \r\n\r\nThe only setting that must be edited in this screen for the default \r\ninstall, is the List Email Address. This should be the e-mail address \r\nthat a normal user would send e-mail to have it republished by mailman. \r\nEdit this field accordingly and click Save. \r\n\r\n# Integrate Vanilla's and mailman's user databases\r\n\r\nNow that you've installed Vanilla and mailman, you can get them talking \r\nto one another.  The first step to doing this is to make sure users\r\ncan authenticate against the mailman database of users.\r\n\r\n## Create a mailman user that can access the Vanilla database\r\n\r\nUsing the phpMyAdmin interface at http://yourserver.com/phpMyAdmin in\r\norder to create a user named mailman.  Assign this user a secure password.\r\nGrant database specific privileges to the mailman user so that the user\r\ncan make any changes to the vanilla database.  (If you've chosen a\r\ndifferent name for the default Vanilla database you'll need to assign\r\nthem accordingly here.)\r\n\r\n## Tweak mm_cfg.py settings to permit access from mailman into MySQL\r\n\r\nCheck and modify the MySQL settings in \r\n/usr/local/mailman/Mailman/mm_cfg.py. You've edited this file before but \r\nyou'll need to do it again for this phase: \r\n\r\n\tMYSQL_MEMBER_DB_NAME = \"vanilla\"\r\n\tMYSQL_MEMBER_DB_USER = \"mailman\"\r\n\tMYSQL_MEMBER_DB_PASS = \"YourSecurePassword\"\r\n\tMYSQL_MEMBER_DB_HOST = \"localhost\"\r\n\tMYSQL_MEMBER_TABLE_TYPE = \"flat\"\r\n\tMYSQL_MEMBER_TABLE_NAME = \"GDN_mailman_mysql\"\r\n\t\r\nChange these fields according to your particular installation; at least \r\nyou will need to change the password to be the one you chose in the \r\nprevious step. \r\n\r\nAt this point you should be able to log into Vanilla as any user you\r\ncreate for a mailman mailing list.  Verify that you can change\r\nuser settings such as mail delivery within a user's profile and see\r\nthese changes occurring in the corresponding MySQL database before\r\nproceeding.\r\n\r\n# Gate email from the mailman into Vanilla\r\n\r\nFor each mailing list, you're going to first create a gateway user \r\naccount that can read and write the MySQL database. Then, you'll add the \r\ngateway user account to the mailman mailing list so that mail sent \r\nthrough the list will arrive at the user account.  Lastly you'll set\r\nup a cron job so that the mailman plugin's tick function is called\r\nregularly, and incoming e-mail is parsed and sent to Vanilla regularly.\r\n\r\n## Create a MySQL user that has access to the Vanilla database\r\n\r\nUsing phpMyAdmin, create a MySQL user with the name vanillagate and \r\na secure password.  Grant all privileges to the vanillagate MySQL \r\nuser to the vanilla database.\r\n\r\n## Create a gateway user account \r\n\r\n\t# useradd vanillagate\r\n\t# passwd vanillagate\r\n\t(set a different secure password here)\r\n\t\r\nAt this point if you haven't done so login as the vanillagate user to \r\ncontinue configuring the parser.  All this installation will be done as\r\nthe vanillagate user, to avoid installing a ton of CPAN modules as root.\r\n\t\r\n## Download and install the local-lib bootstrapper\r\n\r\nDownload and install the latest tarball from \r\n<http://search.cpan.org/~ether/local-lib/lib/local/lib.pm> .  \r\nThese instructions were interpolated from \r\n<http://search.cpan.org/~ether/local-lib/lib/local/lib.pm> :\r\n\r\n\t$ wget http://search.cpan.org/CPAN/authors/id/E/ET/ETHER/local-lib-1.008018.tar.gz\r\n\t$ tar xfz local-lib*\r\n\t$ cd local-lib-1.008018\r\n\t$ perl Makefile.PL --bootstrap\r\n\t$ make test && make install\r\n\t$ echo 'eval $(perl -I$HOME/perl5/lib/perl5 -Mlocal::lib)' >>~/.bashrc\r\n\t$ source ~/.bashrc\r\n\t$ cd ..\r\n\t\r\n## Tell CPAN to automatically install all dependencies\r\n\r\n\t$ perl -MCPAN -e shell\r\n\r\nRun these two commands in the CPAN shell:\r\n\r\n\to conf prerequisites_policy follow\r\n\to conf commit\r\n\r\nNow, exit the CPAN shell with Ctrl-D.\r\n\t\r\n## Install cpanminus\r\n\r\n\t$ curl -L http://cpanmin.us | perl - App::cpanminus\r\n\t\r\n## Install the Emails-Parser perl framework\r\n\r\nCopy the Module/Emails-Parser directory to the vanillagate user's \r\naccount.  The perl module should exist at /home/vanillagate/Emails-Parser\r\nafter completion.\r\n\r\n\t$ cd ~vanillagate/Emails-Parser\r\n\t$ ls \r\n\tinc  lib  Makefile.PL  MANIFEST  parse-emails.conf  parse-emails.pl\r\n\t$ chown -R vanillagate.vanillagate *\r\n\r\nNow you're ready to install Emails-Parser:\r\n\r\n\t$ cpanm .\r\n\t\r\nThis will take a while.  After this is concluded you should be able \r\nto run the parsing email script:\r\n\r\n\t$ cd ~\r\n\t$ perl Emails-Parser/parse-emails.pl\r\n\r\nYou will get an error about being unable to connect to the database.\r\nEdit the file Emails-Parser/parse-emails.conf:\r\n\r\n\tdbhost = localhost\r\n\tdbname = vanilla\r\n\tdbuser = vanillagate\r\n\tdbpass = thesecuremysqlpassword\r\n\tmailboxtype = maildir\r\n\tmailfolder = /home/vanillagate/Maildir\r\n\tmaillistname = yourmailinglistname\r\n\tdbtrace = 0\r\n\t\r\nEdit each of the fields in parse-emails.conf accordingly.  At this\r\npoint, running the parse-emails.pl perl script should connect to the \r\ndatabase:\r\n\r\n\tWARNING: Folder does not exist, failed opening maildir folder /home/vanillagate/Maildir.\r\n\t\r\nYou may optionally set dbtrace to [a number described in the DBI.pm perl \r\nmodule](http://search.cpan.org/~timb/DBI/DBI.pm#TRACING) to detect and \r\ndebug database connection issues, if necessary; set it back to 0 when \r\nyou're done. \r\n\r\n## Add the vanillagate user to the mailman mailing list\r\n\t\r\nAt this point you're ready to add the vanillagate user to the mailman\r\nmailing list, and try sending a test message to the vanillagate \r\nuser.\r\n\r\nLog in to the mailman administrative interface at \r\nhttp://yourmailmanserver.com/mailman/admin/yourmaillist name, click on \r\nMembership Management, click on Mass Subscription, and add the full \r\nvanillagate@yourmailserver.com address to be subscribed to the mailing \r\nlist. \r\n\r\n## Set up tick and parsing jobs for vanillagate user\r\n\r\nFirst, make sure you're logged onto an account that can edit permissions \r\nof files in the Vanilla web directory. \r\n\r\nIn order to run the Vanilla tick job, the tick program needs to be able \r\nto write to the directory plugins/UsefulFunctions/bin . Yes this is a \r\nsilly and unnecessary security hole. Just do it and don't think about it \r\ntoo much. \r\n\r\n\tcd /var/www/html\r\n\tcd plugins/UsefulFunctions\r\n\tchmod 777 bin\r\n\t\r\nLog on as the vanillagate user. Run the following commands at the shell \r\nprompt as the vanillagate user: \r\n\r\n\t/usr/bin/perl /home/vanillagate/Emails-Parser/parse-emails.pl\r\n\t\r\nThat command should produce only a single line of output:\r\n\r\n\tPushing messages to forum: 100% [====================================]D 0h00m00s\r\n\t\r\nNext, run the following command:\r\n\r\n\t/usr/bin/php -q /var/www/html/plugins/UsefulFunctions/bin/tick.php\r\n\t\r\nThere should be no error messages appearing. If error messages appear in \r\neither of those outputs, figure out why before proceeding; error \r\nmessages appearing in either command will cause a series of exciting \r\ncascading errors when you go to the next step. \r\n\r\n## Install cron jobs for vanillagate\r\n\r\nCopy the vanillagate-job.bash file from the cron directory from this \r\npackage into the root directory of the vanillagate user, at \r\n/home/vanillagate. You may review the contents of this file if you wish. \r\n\r\nSet the permissions correctly on the file:\r\n\r\n\tchmod 755 vanillagate-job.bash\r\n\r\nSet your favorite text editor via the command prompt first:\r\n\r\n\texport EDITOR=nano\r\n\t\r\nNext, edit the crontab file for the vanillagate user:\r\n\r\n\tcrontab -e\r\n\t\r\nWhen the editor appears, add the following lines:\r\n\r\n\t*/5 * * * * /home/vanillagate/vanillagate-job.bash\r\n\t\r\nSince you're editing a crontab, you can adjust the first digit in each \r\nline to describe how frequently these jobs should be run. I'm running \r\nthem every 5 minutes here. \r\n\r\nIf all goes well, you should be in business now. Try gating some e-mails \r\nback and forth from the Web interface to the mailing list, and vice \r\nversa. \r\n\r\n## Optional: Disable logging in as the vanillagate user\r\n\r\nFor extra security, you may now set the vanillagate's user shell to \r\n/sbin/nologin if you wish by editing /etc/passwd as the root user.\r\n\r\n# License agreement\r\n\r\nvanilla-mailman, Copyright (C) 2013  John Byrd\r\n\r\n This program is free software: you can redistribute it and/or modify\r\n it under the terms of the GNU General Public License as published by\r\n the Free Software Foundation, either version 3 of the License, or\r\n (at your option) any later version.\r\n\r\n This program is distributed in the hope that it will be useful,\r\n but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n GNU General Public License for more details.\r\n\r\n You should have received a copy of the GNU General Public License\r\n along with this program.  If not, see <http://www.gnu.org/licenses/> .\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}